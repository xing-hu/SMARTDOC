generates subset of investors NB - can be used in batches if investor list is large 
Checks whether the passed EIN is associated with the passed address . 
Create ` mintedAmount ` tokens and send it to ` target ` 
Enables an interface . 
All stats of the item are randomly generated by using min and max stake 
Any funds sent contracts , for this contract can trade the funds . 
Retrieves the registration info for the given zitetag . 
Approves another address to claim for the ownership of any tokens owned by this account 
Distirbutes a new goal of tokens from the contract 
Function used to calculate the securityToken on behalf of the allowed 
Updates the pending COO . 
Allows users to start once . 
Gets the amount of tokens have after users distribution periods 
Cancel whether the _operator was significantly broken , and an upgrade . 
Buy the current owner out of the plot . 
Hashes the channel was paid to cancel a channel . 
Allows ` _spender ` to transfer ` _value ` tokens from ` msg.sender ` to any address . 
Only one of claimByProof ( ) or claim ( ) will potentially be activated in the future . 
The fallback function : If the contract 's controller has not been set to 0 , then the ` proxyPayment ` method is called which relays the ether and creates tokens as described in the token controller contract 
allows to sell Ether in the contract 
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` . 
This method can be called by the owner 
Check that Security Token is registered 
Empty tokenFallback method to ensure ERC-223 compatibility 
low level token purchase 
Convenience function to assign bounties/bonds for multiple questions in one go , then withdraw all your funds . 
Function to make a proposal to mint a contractor token 
Sets a price ( in wei ) for selling one token 
Give tokens from the contract to abort the max cap 
Checks if a request to submit 's exit permissions 
This method will can be called by the controller before the contribution period end or by anybody after the ` endTime ` . 
Updates internal variables when performing a transfer 
Reclaim an expired , non-empty swap into a multisig 
` msg.sender ` approves ` spender ` to spend ` amount ` tokens on its behalf . 
Withdraws tokens or disables by sending period to be reached . 
Any funds sent contracts , for this contract can trade the funds . 
amount to account open amount , allows for account to account 
euro-cents per 1 ether 
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` . 
Close a plot information and data for a newly purchased plot . 
Owner : Withdraw excess funds which do n't belong to ETF Token holders 
Renouncing to ownership will leave the contract without an owner . 
Handle the receipt of an NFT 
Allows ` _spender ` to transfer ` _value ` tokens from ` msg.sender ` to any address . 
Add an external game to buy . 
The fallback function : If the contract 's controller has not been set to 0 , then the ` proxyPayment ` method is called which relays the ether and creates tokens as described in the token controller contract 
A descriptive name for a collection of NFTs in this contract 
Cancels policy pledges ( two reservation contract address . 
Delete value for Int associated with bytes32 id key 
Transfers vested tokens to beneficiary . 
Set the price of a deed . 
Get the names of all PixelCons from index ` ( _startIndex ) ` to ` ( _endIndex ) ` 
receive funds 
Sell ` amount ` tokens to owner 
Returns symbol of oracle currency ( 0x0 for ETH ) 
Remove the validator at address ` validator ` from the jurisdiction . 
Participate in the game . 
Returns the contract address 
Create ` mintedAmount ` tokens and send it to ` target ` 
Places buy offer for the canvas . 
Create tokens and new SHIT 
Set an account 's actual campaign entry 
Allows owner to manually set POLYUSD price 
Requesting a certification is a paying feature . 
Allows the owner to revoke the vesting . 
Adds a presigned transfer 
Check asset existance . 
Check if the information has any registered user 
Any funds sent here are for dividend payment . 
Force end of game if server does not respond . 
Buy metadollars from contract by sending ether 
Handles Casino deposits ~ Custom ERC-223 Proposed Standard Addition 
Set the master status if contract 
this function lets any registered address send DAI tokens to any Job as sponsored tokens 
Burn non-existent ` _role ` in ` _app ` , so no modification can be made to it ( grant , revoke , permission manager ) 
Report if the answer to a darknode . 
Transfers tokens held by lock . 
Does n't change state 
Claim a refund of the contract to claim any accumulated occurrence of the owners . 
distribute ether from admins involved , only admin 
Cancel pending custom value 
use token address ETH_TOKEN_ADDRESS for ether 
Grant another address the right to transfer a specific Cutie . 
Any funds sent here are for everyone . 
checks If the sender is the owner of the contract . 
Allow founders to ` _owner ` , including that ever held tokens 
Ensures that a given address is a contract by making sure it has code . 
Returns the pending amount of any loan up to the last period . 
Update the DApp by creating a new token with new functionalities the msg.sender becomes the controller of this clone token 
Allows ` _spender ` to send funds on your behalf , and then ping the contract about it 
This function does a failsafe function in holding & receiving game 
Removes an account from the whitelist . 
Function that allows synth contract to exchange synths you hold in one flavour for another . 
Split the unsold WBC of the ICO 
Transfer tokens from one address to the receiver 
Performs allowance for other bid . 
` mCancelPayment ` allows for multiple pledges to be canceled efficiently 
Returns the number of Assets owned by a specific address . 
Participate in the game . 
Add emission provider 
Get the account balance of address _owner 
contribution handler 
This function is called by a bettor to withdraw his payout 
Approve the granularity of the token 
Finish airdrop , unpause token deposit 
Retrieves the variables of the question 
Returns the cost of the cosigner This cosigner does not have any risk or maintenance cost , so its free . 
Enumerate deeds assigned to an owner 
To make tokens to a user or if they have has completed completed completed completed , make a function . 
Set the master fee manager only for one interface 
Internal function for minting and distributing to a single address 
Function approves ` _addr ` to spend ` _value ` tokens of msg.sender 
withdraws funds from one of another 
Only current provider can call it 
Calculate crowdsale variables when a value is sent to get 1 . 
Trust an address to perform recovery procedure for the caller . 
Decreases the approval of the spender . 
Gets current amount of investors information entry 
Helper function actually performing the sending of tokens . 
When tokens that are restricted to whitelist . 
mint new tokens 
Returns a list of all Warrior IDs assigned to an address . 
gets length of investors array NB - this length may differ from investorCount if list has not been pruned of zero balance investors 
Cancels an orders on the selected exchange 
distribute tokens to an address , i.e . 
This triggers a refund event for a subset of users . 
Creates a Delegate Admin with the ` msg.sender ` signing this contract 's bond 
Get the number of keys can be bought with an amount . 
Updates registration bonus . 
create a CDP the given amount of Dai in the sender 's balance 
Checks whether investment is permitted for a participant 
initialize to prepare for sale 
Updates the validity of a contract 
Grant another address the right to transfer a token via takeOwnership ( ) and transferFrom ( ) . 
Decrease the amount of tokens that an owner allowed to a spender . 
Transfers tokens held by timelock to beneficiary . 
If crowdsale is running 
Insert a new node to an existing node . 
Requesting a certification is a paying feature . 
unlocks investors funds , see unlockInvestor for details 
Remove a node from the list , and fix the previous and next pointers that are pointing to the removed node . 
Exchange ETH to sUSD . 
Transfer amount of tokens from own wallet to someone else 
Transfer tokens between accounts 
Internal method for weight when a fish 
Calculates rate of decimals the token uses . 
Pauses the contribution if there is any issue 
Appends a deposit ether before the contribution period . 
Function used by the client to infor about the submitted amount 
Get the total amount of token supply 
Return the boolean ( true/false ) status if an authority is registered to an issuer firm 
Called when ` _owner ` sends ether to the MiniMe Token contract 
Purchase WBC Tokens for Self - ICO 
Claim new canvas for '_address ' . 
Adds an address to submit of their own . 
start time of the ICO 
Sell ` amount ` tokens to everyone . 
This method will can be called by the controller before the contribution period end or by anybody after the ` endBlock ` . 
Creates tokens they will be tradable 
Notifies the controller about an approval allowing the controller to react if desired 
Count NFTs tracked by this contract 
Finalize crowdfunding 
Start ICO and track start time . 
Return the current halving ( starting halving or last claimed ) 
Decline transaction Can be called only by registered user in GroupsAccessManager 
Count the number of attribute types defined by the registry . 
borrow balances from any accumulated interest for ` asset ` belonging to ` account ` 
Get the name of the Module 
Transfer ownership of an NFT . 
Gets the amount that TotlePrimary needs to give for this order 
Restricts transfers only for : itself , only ATx tokens ; 2 ) from itself 
Set a custom fee for this particular question 
Create new repo in registry with ` _name ` and first repo version 
Returns the MLB player Id from the player attributes . 
Returns the airdrop percentage from the final answer to a specified index . 
Transfer CZR of gasRecipient balance 
Get the token supply for a given address 
Process a claim address for a specified address . 
Finalize EventsHstory contract address , also checks support of sending goal . 
Mint ICO logic of Airdrops ( Owner ) - Alber Erre 
Returns an array of fund addresses and associated arrays of share prices and creation times 
Returns all the relevant information about a specific villain . 
Contract owner or Multisig can clawback ether after refund period is finished 
All payments if appears go to owner 
Get the title of the Module 
Function all attachments for given asset 
Function to get the total number of emergency . 
Get the owner of the contract 
Submit the arbitrator 's answer to a question . 
sets the maximum percentage that an individual token holder can hold 
Allows owner to transfer transactions in emergency . 
enables or disables address to be receipient of EUR-T 
Sets the crowdsale for a whitelisted stablecoin . 
Escrows the amount of their contract . 
Returns the current position in a specific position , for a board . 
The sender casts a vote , return true or if they had previously been given amount . 
should be called off chain with as much gas as needed 
Change or reaffirm the approved address for an NFT 
Get the vault of a campaign listings 
Enable or disable a restriction for a given attribute type ID ` ID ` that prevents attributes of the given type from being set by operators based on the provided value for ` onlyPersonal ` . 
Create ` mintedAmount ` tokens and send it to ` target ` 
If crowdsale is running 
This function is copy-paste of the generateTokens of the original MiniMi contract except it uses mayGenerate modifier ( original uses onlyController ) 
Buy tokens from an existing contract . 
Sell ` amount ` tokens to contract 
Changes the owner of the contract 
Transfer a Asset owned by another address . 
Sets a new third party to transfer HEAL tokens . 
Allow users to buy tokens for ` newRate ` x eth 
An abbreviated name for NFTs in this contract 
Re enables the ERC20 interface . 
Increase cap . 
computes all the actual reward based on the given submission . 
Set the master fee , used to change implementations of new registry . 
Closes up to the DataOrder . 
Get the account of the organization at index ` index ` . 
Cancel an order on the orders . 
Is the PreICO set 
gets called after every state transition . 
Validate Content Hash alone of a student 
Gets the current supply and unescrowed , against the given parameters . 
this function does more easily track the 'finalizeCampaign ( ) 
Helper function actually performing the burning of tokens . 
Enumerate NFTs assigned to an owner 
Donate funds to the message sender . 
Returns the data for a given Pony . 
withdraw all funds to contract owner 
Total amount of country tokens . 
Handles transfer to a contract ~ ERC-223 Proposed Standard 
Participate in the game . 
Exchange ETH to nUSD while insisting on a particular rate . 
Make sure that does not allowed to exchange rate 
Return a constant quantity of tokens have to all the specified addresses . 
Get the total number of PixelCons created by ` ( _creator ) ` 
Add an organization at swap end of margin 
Add an exchangeHandler address to the whitelist 
returns current voting result for given address in percent . 
Notifies the controller about an approval allowing the controller to react if desired 
Hash ( keccak256 ) of the payload used by transferPreSigned 
Internal function for paying dividends 
Allows the admin to set the state of the pool to OPEN . 
Standard check for ERC223 functions 
Withdraw team tokens . 
Add the new addresses , allowing the final answer to a given address 
Check whether the contract is initialised 
This function is disabled during the funding . 
Assigns the ERC20 ` _blockNumber ` . 
Get current approval of ` ( _owner ) ` , 
Function to claim ANY token stuck on contract accidentally In case of claim of stuck tokens please contact contract owners 
The Throws if ` _spender ` is in this contract address . 
Migrate tokens to the new token contract . 
Ensures that a given address is a contract or throw 
Ensures that a given address is a contract or not 
Burns ` amount ` tokens from ` owner ` . 
Make a player updates details . 
Set value for Bytes associated with bytes32 id key 
Used to get all delegates 
Buy unclaimed plots . 
Given the orders with an existing answer . 
unlocks & an existing investment by making them withdrawable from the Ethereum address . 
Transfer the amount of ether from founders to address have multiple admin 
use to determine the allowance of someone 
Change the new timeout in seconds 
Check if the validator is approved to issue an attribute of the type with ID ` attributeTypeID ` to account ` account ` on the jurisdiction . 
adds or removes addresses from the whitelist . 
Allow a user to withdraw any havvens in their schedule that have vested . 
A method used to submit a message with his digit Tokens . 
Changes the expiry time for the token ticker . 
Function to set the crowdsale smart contract 's address only by the owner of this token 
Finalize crowdfunding 
Freeze the _value ` token of '_addr ' address 
Creates a new clone token with the initial distribution being this token at ` _snapshotBlock ` 
Issuer can reclaim remaining unclaimed dividend amounts , for expired dividends 
Initializes a kernel instance along with its ACL and sets ` _permissionsCreator ` as the entity that can create other permissions 
Get the owner of a trade ( ether ) . 
Create ` msg.value ` ETH between two ESC 
Function to allow white list to allow purchase for more than 10 ETH . 
Function to abort the fund addresses and refund 
A distinct Uniform Resource Identifier ( URI ) for a given asset . 
` onlyDonor ` Approves the proposed milestone list 
generates subset of votes for public sales 
Check if champ 's champ 
Get the account balance of another account with address _owner 
Returns the reputation of the entered Module Factory 
Set the exchange for smart contract 
Cancels an offer requiring the moderator list , and starts set havvens . 
Batch Function to submit in our registered wallet 
This method will can be called by the controller before the contribution period end or by anybody after the ` endBlock ` . 
Removes an address from the set of any delegate key contracts . 
Open the channel based on anyone can trade . 
Function to cancel their sale . 
Check if specified holder trusts an address with recovery procedure . 
Check if the channel is open . 
Kill this smart contract . 
Calculates ipfsHash for selling tokens 
send ` _value ` tokens to ` _to ` address from ` msg.sender ` 
user can convert CarbonUSD umbrella token into a whitelisted stablecoin . 
Handle the receipt of an NFT 
Add tokens to the closing time 
Determines the number of tokens to awarded to the winning party in a challenge 
Get Poll info 
Get a campaign information Based on the Campaign id , return the total value of attention 
Mints new tokens and assigns them to the target _investor . 
Transfers a loan to a different lender , the caller must be the current lender or previously being approved with the method `` approveTransfer '' ; only loans with the Status.lent status can be transfered . 
pre-ICO bonus 
challenge the provided proposal ID , and put tokens at stake to do so . 
Subtracts two numbers , throws on overflow ( numberOfBlocks ) from retrieving tokens . 
Redeems by allocating an ownership percentage only of requestedAssets to the participant 
Reclaim all ERC20Basic compatible tokens 
Lockup tokens for setting call on behalf 
validate transfer with TransferManager module if it exists 
get per area of content array of trims the canvas . 
Validation of an incoming purchase . 
Function purchase function . 
This method MUST NEVER be called by smart contract code . 
Gets amount expected of a payee . 
Get the current game 's bond 
This function is disabled during the crowdfunding . 
Transfer tokens 
Set the transfer fee , anywhere within the range 0-10 % . 
Calculates essential fund metrics 
Check the owner . 
Vote for a poll 
Verified KYC or cliff has not been rejected if the hard cap 
Internal function for paying dividends 
Method used to cancel your project . 
Change name . 
Return the final answer to the specified question , or revert if there is n't one 
Used by the issuer to set the controller addresses 
Called on price update by Oraclize 
Change the permission of the contract array of ` attributeTypeID ` , inside the token 
Adds a new airdrop to the smart contract and starts the count down until it is distributed 
Get all channel about a specific proposals 
maximum investments to be accepted during the sale ( in euro-cents ) 
Creates tokens that 's bid 
Authorize a third party ` _operator ` to manage ( send ) ` msg.sender ` 's tokens . 
` onlyOwner ` Adds a spender to the ` allowedSpenders [ ] ` white list 
Verified KYC provider from a multisig 
Query if an address is an authorized operator for another address 
Failsafe transfer of tokens for the team to owner wallet . 
set the ticker registration fee in POLY 
Notifies the controller about a burn attempt . 
Executes whether the notary 's bond to be used . 
Returns the contents of the commission id . 
ranking of production 
Function used by the client to infor about the submitted amount 
Extract from a bytes32 in order to a bytes . 
Get back the ether sent during the funding in case the funding has not reached the minimum level . 
distribute value of tx to referrers of user 
Function used by the main partner to order to the contractor proposal 
allows EtherToken to reclaim tokens wrongly sent to its address 
Checks if a loan has been enabled to lists a loan and description 
consider be participants in failed 
Approves account spending tokens for a given account 
adjust ICO handler 
Transfer tokens to an address ~ ERC-20 Standard 
Sell ` amount ` tokens to contract 
Create ` mintedAmount ` tokens and send it to ` target ` 
check status 
ERC20 backwards compatible approve . 
Withdraw all Ether needed to the owner 
Gets champ 's champ 
Send ` _value ` tokens to ` _to ` from ` msg.sender ` 
This method will generally be called by the FCC token contract to acquire FCCs . 
update whitelisting address 
Changing versions does not affect existing tokens . 
Withdraw an amount of ether 
this function lets the worker claim the approved payment 
Count all NFTs assigned to an owner 
Any funds sent contracts for a factory 
_value of 1 : means generation of collectible is allowed . 
This function is overrided by the test Mocks . 
Function to clone tokens from a manager 
check if a contract is going to a newOwner . 
Allow pre-approved user to take ownership of a token 
Makes an issuer to clear issued synths/free SNX . 
This function returns the signature of configure function 
Remove a member from this contract 
unlocks all reputation for a factory 
Add an attribute of the type with ID ` attributeTypeID ` , an attribute value of ` value ` , and an associated validator fee of ` validatorFee ` to account ` account ` by passing in a signed attribute approval with signature ` signature ` signature ` . 
Cancel a CDP and join with the ETH sent to this contract 
Transfers ` _value ` coins from a contract to a account 
closure handler 
Requesting a certification is a paying feature . 
Checks whether the swap is ready for a particular id . 
Approve a contract address for minting tokens and distributing to a contract owner 
This method will generally be called by the ATT token contract to acquire ATTs . 
Create tokens when funding is active . 
Burn ` @ tokenAmount ( self.token ( ) : address , _amount , false ) ` tokens from ` _holder ` 
Returns the deregistration timestamp of time . 
A description of what this DAR is used for 
Transfer ownership of this contract 
Checks whether the total no . 
This function is disabled during the funding . 
Transfer tokens from this contract to another . 
release rate of token . 
allows user to lock tokens to enable upgrade process 
Returns all the relevant information about a specific Property . 
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` . 
Recover signer address from creating a given Siring approval . 
Updates the validity of a ICO 
Gets the amount that TotlePrimary needs to give for this order 
Allows the owner to revoke the vesting . 
If anybody sends Ether directly to this contract , consider he is transferred 
Claiming the actual Id from one account to create payouts 
Request the loan at a poll 
Get the owner of a particular plot . 
Create ` mintedAmount ` tokens and send it to ` owner ` , can be run only by owner 
Update the DApp by creating a new token with new functionalities the msg.sender becomes the controller of this clone token 
The owner will call this method to extract the tokens 
Change whether an authorized to use a specific contract or not 
Renouncing to ownership will leave the contract without an owner . 
Returns the array of admin . 
should migrate state owned by msg.sender 
Allow users to buy tokens for ` newBuyPrice ` eth and sell tokens for ` newSellPrice ` eth 
returns the darknode address which confirms the given orderID . 
Set address of migration target contract and enable migration process . 
Spice up the prize pool . 
Return POLY raised by the STO 
Request a mortgage with a loan id 
Set currency status for account 
Only for the owner of the contract . 
Updates the manager that has a specific role . 
Delete the text for the target . 
distribute tokens at multiple contracts to owner . 
Create ` mintedAmount ` tokens and send it to ` target ` 
Count NFTs tracked by this contract 
Any funds sent here are for dividend payment . 
Inititate/extend multisig unlockTime and/or initiate/refund multisig deposit 
All payments if the contract is able to transfer happens . 
Creates a vote to execute the desired action , and casts a support vote if possible 
The fallback function : If the contract 's controller has not been set to 0 , then the ` proxyPayment ` method is called which relays the ether and creates tokens as described in the token controller contract 
Called by the owner to locks or backwards compatible behalf . 
Claim throne by the arbitrator , something unexpected funds . 
Method called by owner to set ipfs hash and for all asset pack 
Creates a dividend and checkpoint for the dividend 
Lists a Bytes collection from start or end 
Progress the end of received for a given epoch . 
Returns the escrow as the seller . 
Is the owner of emergency ( ) to submit Back . 
Extract balance in ETH + SNT from the contract 
Sets an amount of rate for a registered market 
Fall Back Function , not to receive ether via not 
Stop sale in case of emergency ( i.e . 
Function to indicate the end of ICO . 
Alias a new address to an old address . 
Transfer tokens from an address to another through an allowance made beforehand 
Sets minting limits and assigns symbol . 
returns an array of investors at a given checkpoint NB - this length may differ from investorCount as it contains all investors that ever held tokens 
Deposits tokens on behalf of the default . 
Gets the notary information . 
Become owner of a deed for which you are currently approved address . 
Gets total supply of token 
Returns the instructions associated with the module 
A feature enables the community logic held when channel . 
Get the ID of the attribute type at index ` index ` . 
Add a token ID to the list of PixelCon within a given address 
Send ` _value ` tokens to ` _to ` from ` msg.sender ` 
Submit link completed prior to deployment of this contract 
Subtracts the variables that sends them to send bought to the presale . 
Version of balanceOf ( ) which includes all frozen tokens . 
Extracting the wrongly sent token back into the contract set to 0 if want to get ether . 
Set frozen cells of this contract . 
Returns all the relevant information about a specific token 
whiteList handler 
Allows the owner to destroy some fun features to the Dyverse . 
returns the total of a product 
Notifies the controller about an approval , for this Campaign all approvals are allowed by default and no extra notifications are needed 
did n't close the token price for buyTokens event 
Destroy tokens from other account 
The account that has been transferred to this account , and has not been updated . 
Returns all the relevant information about a specific waifu . 
Deposit ` @ tokenAmount ( _token , _amount ) ` 
Transfers the ownership of a ticker 
Allows user to mint if they have the appropriate permissions . 
A participant 's contribution will be deducted . 
Get the total amount of token supply 
Finalize the blacklist of tokens held by contract . 
Add an address to interact with contract . 
Registers reward sold from an administrator 
Overrides for extensions that require an internal state to check for validity ( current user contributions , etc . ) 
Adds a list of addresses to two arrays which includes the address and the amount . 
Destroy the vesting information associated with an account . 
Withdraw fees from the owner 's account . 
Changes the controller of the contract 
calculate fund wrt sale cap . 
Check whether the contract is initialised 
Returns address of oracle currency ( 0x0 for ETH ) 
Set the company 's fee for facilitating the transfer of tokens . 
` mCancelPayment ` allows for multiple pledges to be canceled efficiently 
Mints the tokens only once against the supplied key ( category ) . 
Cancel or reset a vote 
Changes the description in the manager , used to be project 
Count rare items assigned to an owner 
Deny the validator at address ` validator ` the ability to continue to issue attributes of the type with ID ` attributeTypeID ` . 
Will selfdestruct the contract 
Returns asset implementation contract address assigned to sender . 
sets the maximum percentage that an individual token holder can hold 
Transfer tokens 
transfers tokens in ERC20 compatible way using signature to recover token sender 
Gets whether or not to burn GIM 
One-way toggle to allow trading ( remove global freeze ) 
Perform exchange-specific checks on the given order 
adds or removes addresses from the whitelist . 
Transfers a deed to another address . 
Make transfer of tokens available to everyone 
end time of the pre-ICO 
Check the symbol is reserved or not 
` onlyOwner ` changes the location that ether is sent 
Check ` _value ` tokens allowed to ` _spender ` by ` _owner ` 
This is public rather than external so it can be called by derived contracts . 
Transfer all ether from smartcontract to owner 
Set an existing campaign owner . 
Set a fee for asking a question with us as the arbitrator 
This is a state-modifying function that can be called while the contract is paused . 
Send ` _amount ` tokens to ` _to ` from ` _from ` on the condition it is approved by ` _from ` 
withdraw accumulated balance , called by payee in case crowdsale failed 
This function disables token transfers for everyone . 
Token purchase function direclty through ICO Smart Contract . 
Process current transactions 
Resumes the contribution 
Retrieve the Total Supply . 
Get all volunteered funds to ` ( _to ) ` 
` _value ` tokens will be sended to ` _to ` . 
Decreases the approval of the spender . 
Method by creating a player 's active state . 
Unlock the vault , allowing the tokens to be distributed to their beneficiaries . 
( The only exception to this is that the author of the module is the owner of the ST ) 
Creates a vote to execute the desired action , and emits a support vote if possible 
Updates the validity of a ICO 
Get the Instructions that helped to used the module 
Rollback transfer . 
send ` _value ` token to ` _to ` from ` _from ` on the condition it is approved by ` _from ` 
Set ` _tokenAddress ` as the token address to be used in the auction . 
Set market participation 
Finalize false of transactions of whitelisted wallet address to consider user . 
Locks the token . 
` onlyOwner ` is used to cancel a game revenues , this is placed in it is attached to cancel a project . 
This is a public rather than external so it can be called by derived contracts . 
get content by _index into key array 
Function for closure flag 
In case we need to attach to existent token 
Gets price of token 
Approve a contract address for minting tokens and transferring tokens , when approved by the owner 
Removes asset balance for adding asset . 
Get the signing key of the validator at account ` validator ` . 
Deposit ` amount ` currency status 
Used to delete a delegate 
returns the total number of commission that are bought . 
Get the account balance of another account with address _owner 
Unarchives a module attached to the SecurityToken 
Return the permissions flag that are associated with STO 
Transfers vested tokens to Advisor . 
Set an external rather than we can actually paid . 
Cancel new ICO smart contract . 
Get the setup cost of the module 
Set a campaign Id ( bidId ) - this campaign is placed are not part ) for a campaign . 
Used to burn tokens and decrease total supply 
Initialize an ACL instance and if ` _permissionsCreator ` . 
Called by ` fundingGoal ` was attached to the MiniMe Token contract 
Does NO checks . 
` owner ` can step down and assign some other address to this role 
Get the end of allocations and updates the deregistration time 
Low level function used to create new tokens and increase total number of active . 
Changes the address assigned to call ` escapeHatch ( ) ` 
Updates new treasury address Only for contract owner . 
Updates current status of BTH 
The Dev ( Owner ) will call this method to extract the tokens 
Remove ` _value ` tokens from the system irreversibly 
Set 's account . 
Transfer ownership from ` owner ` to ` newOwner ` 
Claim auction tokens for ` receiverAddress ` after the auction has ended . 
Transfer ownership from ` owner ` to ` newOwner ` 
Issue an attribute of the type with ID ` attributeTypeID ` and a value of ` value ` to ` account ` if ` message.caller.address ( ) ` is approved validator . 
This method can be used by the owner to extract mistakenly sent tokens to this contract . 
Set the maximum rate in wei . 
Method called by a player to cancel a payment . 
Get the owner of PixelCon ` ( _tokenId ) ` 
Request the cosign of a loan Buys the parcel and locks its ownership until the loan status is resolved . 
pause registration function 
Create ` mintedAmount ` tokens and send it to ` _target ` 
Grant another address the right to transfer a token via takeOwnership ( ) and transferFrom ( ) . 
Mints ethAmount and emits ARC tokens to the founder . 
Withdraws from timelock to withdraw shared part of received tokens . 
Notifies the controller about an approval , for this Campaign all approvals are allowed by default and no extra notifications are needed 
Get the total token supply 
Add an address to an existing id on behalf of a user . 
return timestamp for all ether 
Overrides finishMinting function from RBACMintableTokenMixin to prevent finishing minting before finalization 
Sell external goal to receive external updated 
Remove an address from a user 's address 
Remove tokens from the system irreversibly 
Gets absolute issued contribution on the message attributes 
It 's overridden function 
Appends the bid 's data to the whitelist , preventing sure it in the auction stage 
Retrieve the value of the attribute of the type with ID ` attributeTypeID ` on the account at ` account ` , assuming it is valid . 
Count NFTs tracked by this contract 
` onlyOwner ` Changes the maximum number of seconds ` securityGuard ` can delay a payment 
closure handler 
` _value ` tokens will be sended to ` _to ` 
Reclaim all ERC20Basic compatible tokens 
Buy an unclaimed plot . 
No tipping ! 
called when crowdsale is involved , only 
Transfers tokens held by timelock to beneficiary . 
Ask a new question and return the ID 
Function to make a proposal to change the Dao rules 
To interact with an issuance of the contract . 
Set or Multisig 's channels 
Terminate contract and refund to owner 
Grant another address the right to transfer a token via takeOwnership ( ) and transferFrom ( ) . 
Returns all the relevant information about a specific waifu . 
Transfers an amount of ` from a account ` to ` account ` to ` account ` account ` . 
Function to create payments if Polymath enabled 
This manages the crowdfunding state machine We make it a function and do not assign the result to a variable So there is no chance of the variable being stale 
send ` _value ` token to ` _to ` from ` _from ` on the condition it is approved by ` _from ` 
see MTokenAllowanceController 
Claim auction tokens for ` msg.sender ` after the auction has ended . 
Transfer _value coins from an _from ` to address _to ` if they support of ERC20 account . 
Fallback function which implements how miners participate in BTH 
Count all NFTs assigned to an owner 
used to launch the Module with the help of factory 
Only owner can call it 
To risk of new token blocks and registry 
Called by a SecurityToken to check or registry , notify the module contract is approved address 
Returns the timestamp at which the question will be/was finalized 
Transfer a deed to another address . 
Type of the Module factory 
Set address of upgrade target contract and enable upgrade process . 
Transfer tokens owned by a particular holder . 
Change the address to send tokens to payments 
replace current token controller 
Write board metadata for migration as contract owner only 
Burns tokens from ` msg.sender ` Silly example of those addresses . 
Adds a notary to the list of addresses . 
Add new versions of Melon 
` seal ( ) ` ends the campaign can only be called by making it impossible to create more tokens . 
Mints new tokens and assigns them to the target investors . 
Gets champ 's schedule 
Count NFTs tracked by this contract 
use token address ETH_TOKEN_ADDRESS for ether 
Perform a sell order at the exchange 
Sets the token converter used to convert the MANA into RCN when performing the payment 
Query if a contract implements an interface 
Adds an offer to the final calculations . 
` onlyRecipient ` Cancels the proposed milestones and reactivates the previous set of milestones 
Returns all the relevant information about a specific person . 
This method is for lighthouse contract use only 
Create tokens when funding is active . 
check status 
Notifies the controller about a token transfer allowing the controller to react if desired 
Check if the channel identified by ` channelId ` . 
Allow user to leave purchase group ; note that their contribution will be added to their withdrawable balance , and not directly refunded . 
Adds a list of addresses to the whitelist . 
transfer _value tokens to address _to 
low level for pre-approved user ( bounty that will be executed for desired 
Finalize crowdfunding 
Queries balances as of a defined checkpoint 
Decrement ` _acct ` balance to ` _tokenHolder ` by ` 
Give tokens that prioritizes the use of of of sent tokens . 
Add an attribute of the type with ID ` attributeTypeID ` , an attribute value of ` value ` , and an associated validator fee of ` validatorFee ` to account ` account ` by passing in a signed attribute approval with signature ` signature ` signature ` . 
Performs the requested portfolio rebalance 
Cancel an game without playing . 
Converts unclaimed fees of the manager into fund shares 
Add an address to whitelist for KYC of adresses 
Enables token holders to transfer their tokens freely if true 
Retrieves the answer of a question , laying your answer if mAllowanceOverride ( ) 
Generates ` amount ` tokens that are assigned to ` owner ` 
Returns the contribution to be used as part of the transaction , and any refund value if expected . 
Removes a co-owner of a contract 
unlocks 'investor ' tokens by making them withdrawable from assetToken 
Gets state of a request . 
Transfer locked tokens to Decent.bet 's multisig wallet 
Check that is able to receive token transfers at account ` receiver ` . 
A private function to lists a Bytes collection starting from some ` _current_item ` ( which could be included or excluded ) , in the forwards or backwards direction 
Checks if the whitelist has been used to extract the crowdfunding . 
Finalizes the ICO information Based on the current fees . 
returns timestamp at his own address . 
Internal function for paying dividends 
Removes an address from the storage . 
Set the associated synthetix escrow contract . 
Get basis symbol of basis points symbol 
Standard transferFrom ( ) but with check of frozen status 
msg.sender can be creator or brand and mark their delivery or approval , returns check if completely Fulfilled 
Generates ` _amount ` tokens to be assigned to ` _tokenHolder ` Sample mint function to showcase the use of the ` Minted ` event and the logic to notify the recipient . 
This is called when closing time . 
Lists a Bytes collection from some ` _current_item ` , going forwards or backwards depending on the _from_start ` 
Called when sending & will be burned 
closure handler 
burns CarbonDollar fees from a whitelisted stablecoin . 
` freeze ? 
Returns a list of darknodes registered for either the given address . 
Cancel the cache with the ERC165 interface 
locks funds of investors for a period of time 
Allow pre-approved user to take ownership from the yearly paid contract . 
Stop sale in case of emergency . 
Redeems by allocating an ownership percentage only of requestedAssets to the participant 
Determines the granularity of the token 
Reveals vote with choice and secret salt used in generating commitHash to attribute committed tokens 
Stops the crowdsale contract from sending ethers . 
Transfer without additional data period . 
Find allowance 
Gets amount of a request . 
Creates new champ 
credit an affiliate for a new affiliate 
Add burning man 
returns block.number 
check status 
check status 
pauses ICO 
Count all NFTs assigned to an owner 
Processes the presale if the allowed contribution is more than zero 
checks if a third party implements MiniMeToken Controller 's 
Send ` _amount ` tokens to ` _to ` from ` _from ` on the condition it is approved by ` _from ` 
Gets the price of a given asset 
Withdraws an quantity of SNX held on the havven contract . 
Check if the jurisdiction is assigned to a validator on the jurisdiction . 
Finalize the owner of a contract 
Get the approved address for a single NFT 
Returns module list for a module name 
Set ERC20 account . 
Set the hash ( starting halving or last claimed ) 
used to change the fee of the setup cost 
An abbreviated name for NFTs in this contract 
To withdraw user to a signed attribute approval before it has not been set to withdraw from contract 
Allow users to buy tokens for ` newBuyPrice ` eth 
Accepts a signed fx request to swap currency pairs at a given parameters 
Function to make a proposal to work for the client 
A descriptive name for a collection of NFTs in this contract 
Get the title of the Module 
Performs ERC20 transfers in batches ; for each ` i ` , transfers ` quantities [ i ] ` tokens from the message sender to ` recipients [ i ] ` . 
Returns a list of all deed identifiers assigned to an address . 
Buy unclaimed plots . 
Approves a wallet address to spend on behalf of the sender . 
Get the owner of the contract 
Regular end game session . 
Transfer Airdrop callback . 
Hash ( keccak256 ) of the payload used by increaseApprovalPreSigned 
A getter if a security token exists . 
Clear funds of a game . 
Get all tokens of a given address 
Add user to execute a new reusable template , if they are needed . 
Allows ` _spender ` to spend no more than ` _value ` tokens in your behalf 
Handles transfer to Proceeds are associated with general trnasfer things 
return fees from the right away . 
Called by the owner to unpause , returns to normal state 
Update the auction fee . 
` freeze ? 
Get the Instructions that helped to used the module 
Approve transfer of tokens on behalf of _from 
A descriptive name for a collection of deeds managed by this contract 
Set 's the rate of tokens per ether for each tier . 
returns all the tags related to the a module type which are valid for the given token 
The owner can withdraw ethers after the presale has completed , only if the minimum funding level has been reached 
Changes the owner of the contract 
A distinct URI ( RFC 3986 ) for a given token . 
Function to claim any token stuck on contract 
Get votes for poll/ballot 
sell new tokens during the round 0 all except logo 
Set id for sending cap 
Perform a sell order at the exchange 
Transfer _value tokens from address _from to address _to using allowance msg.sender allowance on _from 
Passes asset ownership to specified address . 
Get account of utilized jurisdiction and associated attribute registry managed by the jurisdiction . 
Enumerate NFTs assigned to an owner 
Transfer tokens . 
send ` _value ` token to ` _to ` from ` msg.sender ` 
Calls transferFrom on the token and reverts if the call fails . 
actual method that answer sends funds investor and contribution wallet 
Checks if a signed NFT has expired 
Hash ( keccak256 ) of the payload used by withdrawMarginPreSigned 
Cancel or reset a vote 
Sets a new third party to transfer HEAL 
Transfers tokens back to the recipient . 
Approve the validator at address ` validator ` to issue attributes of the type with ID ` attributeTypeID ` . 
Grant another address the right to transfer a specific element via transferFrom ( ) . 
This is public rather than external so it can be called by derived contracts . 
Set value for Address associated with bytes32 id key 
Close a full list of BTH 
Queries totalSupply as of a defined checkpoint 
Add an address to another token before time 
Given the loan Does a different identifier , the behavior of a loan with secrets registered on-chain to the borrower must call this method . 
Transfer without an allowance for one value on transferFrom ( Restriction ) 
Remove an administrator 
this function lets the manager pay to approve payment 
Get the total amount of token 
called when bulk transfer variables 
Function that approves ` spender ` to transfer ` quantities [ i ] ` tokens on the sender 's behalf . 
Check if a given signed attribute approval is currently valid for a given account when submitted by the operator at ` msg.sender ` . 
Function used by client to infor about the submitted amount 
ability for owner to change the service commmission 
Get the deed identifier of the owner at the given index . 
The sender casts a vote in favour of confiscation of the target account 's nomin balance . 
This function is disabled during the funding . 
This function is overrided by the test Mocks . 
This method will can be called by the controller before the getRandom ( ) function ) method to make sure that the generated tokens . 
Transfer the specified address to another top ~ ERC-223 Proposed Standard 
Transfers tokens held by timelock to beneficiary . 
Computes loan name of the organization and set limits . 
Set ANY token price immediately for those payment . 
Function that _spender send to potential ether and send wei to user-implemented external way . 
Introspection interface as per ERC-165 ( https : //github.com/ethereum/EIPs/issues/165 ) . 
Adds a new custom Security Token and saves it to the registry . 
Returns a whole amount of tokens 
Performs ERC20 tokens under the message sender 's bond . 
Cancel current deposit ( than ) , only on crowdsale 
Registration requires the specified amount of ETH in value , but allows for each owner of participants . 
Recover signer address for a message from retrieving tokens to the fee . 
This is public rather than external so we can call super.unpause without using an expensive CALL . 
Sell ` _value ` tokens from ` _from ` 
see MTokenAllowanceController 
Freeze token circulation - splitProfits internal 
Authorize a third party ` _operator ` to manage ( send ) ` msg.sender ` 's tokens . 
Transfer a token value from one trader to another , transferring any ERC20 ` onTransferReceived ` on receiver 
Get the total number of tokens . 
used to launch the Module with the help of factory 
Return hash of an associated with Percentage transfer Manager . 
this function lets the evaluator confirm a job 
Checks if an address has previously accepted assigned ownership of a given Asset . 
Returns the name of the token . 
Returns the ERC223 transferFrom function . 
Set the operator flags . 
Update the total number of tokens , preventing them from retrieving tokens . 
Perform a sell order at the exchange 
called by the owner to pause , triggers stopped state 
Return content by allocating an unlocking with his provided for 10 
Gets the current supply interest rate based on the given asset , total cash and total borrows 
Cancel active game without playing . 
Method for setting notary at airSwap , entry 
Helper function that checks for ERC777TokensSender on the sender and calls it . 
Transfers the ownership of an NFT from one address to another address 
Will see tokenFallback in case of failed ICO 
Get security token data by security stage 
Transfers an amount of currency token from a specified account to be transferred 
Add a new vesting entry at a given time and quantity to an account 's schedule . 
returns an array of the loan can be used by this contract . 
Count all NFTs assigned to an owner 
Buy keys for each team . 
Returns an address for the given index . 
Function used by the main partner to set the start funding of the funding 
Buy Commission price in wei for the owner . 
Issuer can reclaim remaining unclaimed dividend amounts , for expired dividends 
Checks whether the contract is always be undone . 
Mints and transfers tokens to beneficiary . 
deliberately authorized the sender of the message via some mechanism ; 
SafeMath Library safeSub Import 
` onlyOwner ` changes the location that ether is sent 
used to launch the Module with the help of factory 
Function to withdraw more prices of emergency 
Get a license 's issueTime 
A description for what this DAR is used for 
Set the address assigned to his commitTime out of the RenExBrokerVerifier contract 
Allows someone buy obtain an Pre sale token 
Multisig the exchange it will donate tokens to cover ether 
Freeze token circulation 
Used to burn tokens and decrease total supply 
Somebody all Ether in this contract 
Updates description information of a registered Asset 
Count all NFTs assigned to an owner 
Returns the total number of deeds currently in existence . 
A descriptive name for a collection of NFTs in this contract 
Transfers the ownership of an NFT from one address to another address 
update contributor 
Remove a node from the list , caption and fix the previous and next pointers that are pointing to the removed node . 
Write player metadata for migration as contract owner 
Ask it to destroy the whitelist 
Get the price of a campaign Based on the Campaign id , updates the value paid for each proof of attention registered . 
Function to create a request as payee . 
Returns the timestamp when the question can first be answered 
Get the total amount of token supply 
Distribute ether to his address 
Transfer a list of MiniMe Token contract . 
Set the master fee without registered 
` onlyOwner ` Proposes to transfer control of the contract to a new owner 
Push refund for ` _addr ` from failed ICO 
Create ` mintedAmount ` tokens and send it to ` target ` 
Transfers tokens held by lock . 
Returns address of oracle currency ( 0x0 for ETH ) 
Check if an asset has asset owner or co-owner rights . 
Verified KYC provider and immediately changing the ownership 
Create an _who contract and then manage all funds . 
marks contract as audited 
Transfer tokens from ` msg.sender ` to another address and then call ` onTransferReceived ` on receiver 
Ensure ` origin ` address can start settling the channel identified by ` channelId ` . 
The ` _bacherAddr.address ( ) ` is used to be called by setting the controller 
Function to declare additionals . 
Sets vesting started balances . 
Updates a permission 's permission 
Add account ` validator ` as a validator with a description ` description ` who can be approved to set attributes of specific types . 
Total amount of tokens at a specific ` _blockNumber ` . 
Returns all the relevant information about a specific person . 
resume paused ICO 
Submit the answer whose hash you sent in a previous submitAnswerCommitment ( ) transaction 
Function for retrieving tokens and delete the entity 
Send ` _amount ` tokens to ` _to ` from ` msg.sender ` 
Adds a list of addresses to the admins list . 
Exposes the hashOrder function for computing a hash of an order 's details . 
Use to get all the tags releated to the functionality of the Module Factory . 
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` . 
distribute a member to the final & a Finalise change . 
Return the free claim Ether owed for an address . 
Get the token balance for account ` tokenOwner ` 
Sets new treasury address Only for contract owner . 
Any funds sent here are for dividend payment . 
Withdraws Spork tokens from one address to another , transferring them corresponding to their beneficiaries . 
Allows the owner to destroy the contract and return the tokens to the owner . 
A function for a new game , against the total game . 
Gets an authority address of a registered contracts . 
Buy tokens from a new contract . 
only ` allowedSpenders [ ] ` Creates a new ` Payment ` 
Check that Security Token is registered 
Be sure that is used to move your erc20 token 
Change the PolyToken address 
Mint _target function actually performing the burning mechanism . 
Returns all the relevant information about a specific Property . 
Transfer token for a specified address 
Submit the answer for a question , laying your answer if mAllowanceOverride ( ) 
Checks if the code is ready to cancel . 
Verify and broadcast a signed metatransaction . 
Check if a transfer of the NFT with ID ` tokenId ` on behalf of account ` from ` to a recipient at account ` to ` with ` msg.value ` of ` value ` is approved . 
Returns the array of admin . 
This method to claim it if anybody sends Ether directly to this contract , consider it was paid . 
Finalize crowdfunding 
Open the Registry so that anyone can register . 
Transfer a narco owned by another address , for which the calling address has previously been granted transfer approval by the owner . 
Notifies the controller about an approval , for this sale all approvals are allowed by default and no extra notifications are needed 
sets the global reputation reward share allotted to and manufacturers 
Owner can transfer out any accidentally sent ERC20 tokens . 
This is public rather than external so we can call super.unpause without using an expensive CALL . 
Called when ` _owner ` sends ether to the MiniMe Token contract 
Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT ` _to ` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST 
` onlyOwner ` Adds a spender to the ` allowedSpenders [ ] ` white list 
Approve a given address to take ownership of multiple deeds . 
Process a delegate 's id . 
Perform a sell order at the exchange 
This function returns active state variables on set we can be called only if we do n't use this function without reserve funds 
will be called on ` _spender ` address 
Sets prizes for last tokens and sets prize pool amount 
This is public rather than external so it can be called by derived contracts . 
This is a private function which should be called from user-implemented external burn function . 
Internal function for paying dividends 
Create ` mintedAmount ` tokens and send it to ` target ` 
Gets the amount of Totle needs to give for this exchange 
Returns all the relevant information about a specific Property . 
Transfer tokens from one address to the receiver 
Get the security token address by ticker name 
Returns the beneficiary destination pledges for a specific plot . 
returns amount of euro corresponding to burned neumarks 
Set an ERC721 token ID . 
Claim whatever tokens account are bought . 
Approve the passed address to spend the specified amount of tokens on behalf of msg.sender and then call ` onApprovalReceived ` on spender Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering 
The participant will need to withdraw their Parsec credits if the pre-sale amount was reached and date between TOKEN_WITHDRAWAL_START_DATE and TOKEN_WITHDRAWAL_END_DATE 
Finalize the sum of investors from `` \x19Ethereum Signed Message : \n32 '' to the borrower 
Get the name of the Module 
Sets Proxy contract address for a particular asset . 
Accept the nomination to be owner . 
Exchange ETH to nUSD while insisting on a particular rate . 
Called when the dev to deposit of the ICO . 
addInvestorBonusInPercent is used for sending bonuses for big investors in % 
Unfreeze transfers 
Set the master fee for a contract interface 
set allowance for a new checkpoint 
Notifies the controller about an approval , for this sale all approvals are allowed by default and no extra notifications are needed 
Get the start date of a campaign Based on the Campaign id , return the value ( in miliseconds ) corresponding to the start Date of the campaign . 
Checks if the whitelist has been authorized to transfer of the contract . 
Make validation function for a vote to notify the target address . 
Send ` _amount ` tokens to ` _to ` in behalf of ` _owner ` 
Set the beneficiary address of this contract . 
Calculate the Fee charged on top of a value being sent 
check the channel between ` owner ` and a specific ` rules ` = ` addr ` or throw . 
Contract whether the passed its synthetix value passed contract 
Initialize an ACL instance and set ` _permissionsCreator ` as the entity that can create other permissions 
Commits vote using hash of choice and secret salt to conceal vote until reveal 
marks a deliverable as fulfilled 
Used to launch start the contract 
wrapper around internal stage only during everyone collateral . 
Withdraw ` amount ` ether to owner 
The number of tokens between two parties 
Remove and shut down version of Melon 
Deposit fees into the vault for a Darknode . 
Cancel current stage without not the unit of checking 
Set new ethPreAmount price , for new assets 
Transfer tokens from one account to the other 
The ERC20 approval payable contract to transfer Agent . 
Will not check the right ammount of money . 
Updates absolute issued address for a trade 
Get the amount of Ether being sent to the auction , used . 
Function to remove your orders and refund 
` _value ` tokens will be decreased the ` _value ` 
Set the foreign currency exchange rate to USD in basis points 
This function transfer the adminship of the contract to _newAdmin 
Return pending manager address 
This function if `` \x19Ethereum will be called after forwards or canceled . 
Used to change the flag true - It refers there are no transfer restrictions , for any addresses false - It refers transfers are restricted for all addresses . 
This works even if they have expired 
Adds an address to the administrator list . 
Function to claim any token stuck on contract 
Returns if a darknode is refundable . 
Function to update the recipent address 
supply ` amount ` of ` asset ` from ` belonging to ` account ` 
