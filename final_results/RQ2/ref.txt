updates tier start/end dates by id
Checks whether the passed provider is set for the passed EIN .
Create ` mintedAmount ` tokens and send it to ` target `
Disables an interface .
The price of the items increases after each bought item by a given amount
Provides a refund for the entire list of swimmers to distribute at a pro-rata rate via the reimbursement functions .
Set the zitetag 's registration info .
Approves another address to claim for the ownership of any tokens owned by this account
notate contribution
Burn function used to burn the securityToken on behalf of someone else
the refund addresses must not have been already provided
Sets the new price for unclaimed plots .
Gets shares ( in percents ) the user has on provided date
Cancel an outstanding order .
Get the buyout cost for a given plot .
Refund ETH to the channel initiator and set channel state as refuned .
Allows ` _spender ` to transfer ` _value ` tokens from ` msg.sender ` to any address .
Only one of claimByProof ( ) or claim ( ) will potentially be activated in the future .
The fallback function : If the contract 's controller has not been set to 0 , then the ` proxyPayment ` method is called which relays the ether and creates tokens as described in the token controller contract
does n't allow to sell to the contract
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` .
sets the token that is to be used for this Lottery
Check that Security Token is registered
Fallback function for ERC223 standard .
low level token purchase
Convenience function to assign bounties/bonds for multiple questions in one go , then withdraw all your funds .
Function to make a proposal to work for the client
setPrice - sets the price of a product
allows to purchase from the contract
Process request for SNT/ETH and send it to destination address
This method will can be called by the controller before the contribution period end or by anybody after the ` endTime ` .
Validates a transfer with a TransferManager module if it exists
Withdraw ether and delete the htlc swap .
` msg.sender ` approves ` spender ` to spend ` amount ` tokens on its behalf .
Withdraws the tokens .
End token minting period permanently for STOs
transfer amount to account from account deducting from spender allowance
euro-cents per 1 ether
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` .
Purchases a new plot with at the location ( ` purchase [ 0 ] ` , ` purchase [ 1 ] ` ) and dimensions ` purchase [ 2 ] ` x ` purchase [ 2 ] ` .
Owner : Withdraw excess funds which do n't belong to Basket Token holders
Renouncing to ownership will leave the contract without an owner .
Handle the receipt of an NFT
Allows ` _spender ` to transfer ` _value ` tokens from ` msg.sender ` to any address .
If you call directly this function your are buying for someone else
The fallback function : If the contract 's owner has not been set to 0 , then the ` proxyPayment ` method is called which relays the ether and creates tokens as described in the token owner contract
Returns the name of the token .
Calculates the maximum amount that should be spent on a given buy trade
Set value for Int associated with bytes32 id key
Transfers vested tokens to beneficiary .
Return a collectible 's details .
Get the names of all collections from index ` ( _startIndex ) ` to ` ( _endIndex ) `
Function to receive payments
withdrawal ` amount ` tokens from contract
Returns symbol of oracle currency ( 0x0 for ETH )
Remove the validator at address ` validator ` from the jurisdiction .
Participate in the game .
change a feature status
Create ` mintedAmount ` tokens and send it to ` target `
Cancels previously made buy offer .
Sends the ETH to ETH fund wallet and finalizes the token sale
Sets the time window of the validity of the signed rates .
Allows owner to manually set POLYUSD price
Requesting a certification confirmation is a paying feature .
Allows the owner to revoke the vesting .
some rules : 1 .
Check asset existance .
Get the ChannelManager address for a specific token
Default function used for any payments made .
Force end of game if server does not respond .
Buy DOL from VAULT by sending ETH
Handles Casino deposits ~ Custom ERC-223 Proposed Standard Addition
Deprecate a contract interface
this function lets any registered address send DAI tokens to any Job as sponsored tokens
Remove the manager of ` _role ` in ` _app `
Refund the bond of a deregistered darknode .
Transfers tokens held by lock .
Does n't change state
Set a new token address where users can redeem ERC20 tokens .
update user on-chain nonce with admins involved , only admin
Gets redemption fee value
use token address ETH_TOKEN_ADDRESS for ether
Grant another address the right to transfer a perticular Cutie via transferFrom ( ) .
If we need to adjust the amounts players or EthernalGo gets for each game
checks if provided address is an owner address
Used to enable token minting
index not out of bounds
Withdraw lender funds When a loan is paid , the funds are not transferred automatically to the lender , the funds are stored on the engine contract , and the lender must call this function specifying the amount desired to transfer and the destination .
Update the DApp by creating a new token with new functionalities the msg.sender becomes the controller of this clone token
Allows ` _spender ` to spend no more than ` _value ` tokens in your behalf , and then ping the contract about it
Gets current state of Emission Provider .
Removes an account from the whitelist .
A function that lets you easily convert an amount in a source currency to an amount in the destination currency
Split the unsold WBC of the ICO
Under special circumstances the Transfer Agent needs to move tokens around .
Destroys specified amount of senders asset tokens .
` mWithdraw ` allows for multiple pledges to be withdrawn efficiently
Returns the number of tokens owned by a specific address .
Participate in the game .
Add emission provider
Get the token balance ` _owner `
contribution handler
Returns the info of a specific bet
Internal function that ensures ` _amount ` is multiple of the granularity
Start airdrop
Return the dispute fee for the specified question .
Returns the cost of the cosigner This cosigner does not have any risk or maintenance cost , so its free .
Enumerate NFTs assigned to an owner
To make token transfers from the allowance of another user
Set maximum fee for contract interface
Create ` mintAmount ` tokens and send it to ` target `
` msg.sender ` approves ` _spender ` to spend ` _value ` tokens
commits funds in one of offerings on the platform
This method is for lighthouse contract use only
Function to calculate tokenamount from wei .
Trust an address to perform recovery procedure for the caller .
Decreases the amount ` _spender ` is allowed to withdraw from your account .
calculate number of tokens need to be issued based on the amount received
Helper function actually performing the sending of tokens .
function allows admin to unlock tokens on _target address
mint ` _value ` tokens into ` _to ` address possession
Gets the list of token IDs of the ` _owner `
gets length of investors array NB - this length may differ from investorCount if list has not been pruned of zero balance investors
Cancels orders that were not expected to settle immediately , i.e .
used by ROLE_NEUMARK_ISSUER to transer newly issued neumarks typically to the investor and platform operator
Process a reimbursement claim for subset of addresses .
Creates a Giver Admin with the ` msg.sender ` as the Admin address
Get the price buyer have to pay for next keys .
The claim dividend to be paid for each adjacent plot , and as a flat dividend for each buyout .
create a CDP from the ETH sent , and then create Dai and reinvest it in the CDP until the target liquidation price is reached ( or the minimum investment amount )
Checks whether investment is permitted for a participant
initialize to prepare for sale
Set Auditor account address to a new value
Grant another address the right to transfer token via takeOwnership ( ) and transferFrom ( ) .
Decrease the amount of tokens that an owner allowed to a spender .
Transfers tokens held by timelock to beneficiary .
Calculates how many tokens are left to sale
change the costs for using the contract
Requesting a confirmation that a document is a certification is a paying feature .
unlocks investors funds , see unlockInvestor for details
Insert a node at the beginning of the list .
Exchange ETH to sUSD .
Internal transfer , can only be called by this contract
Transfer tokens between accounts
Call this function to attack another fish
Get number of decimals for this token .
Pauses the contribution if there is any issue
Enables a contributor to contribute using Binance coin .
Function used by the client to order according to the contractor proposal
Return the total supply of the token
Return if an authority address is registered
Called when ` _owner ` sends ether to the MiniMe Token contract
Purchase WBC Tokens for Self - ICO
Returns last bid for canvas .
Setting UserInfo .
start time of the pre-ICO
Transfers to owner any tokens send by mistake on this contracts .
This method will can be called by the controller before the contribution period end or by anybody after the ` endBlock ` .
Called to unlock tokens after sale has ended
Notifies the controller about an approval allowing the controller to react if desired
Count NFTs tracked by this contract
Finalize crowdfunding
Finalize ICO and track finalize time .
Calculates the halving number of a given block
Accept transaction Can be called only by registered user in GroupsAccessManager
Count the number of attribute types defined by the registry .
Users repay borrowed assets from their own address to the protocol .
Get the name of the Module
used to transfer contract ownership
Gets the amount that Totle needs to give for this order
ServiceAllowance interface implementation
Set a custom fee for this particular question
Create new repo in registry with ` _name ` and first repo version
Returns the gameCard associated with the asset/collectible/token
Gets merkle leaf based on index ` _index ` , destination address ` _address ` and amount of tokens to transfer ` _amount `
impl tokenRecipient interface
Get the token name for Token interfaces
Remove a token address from the list of token addresses .
Withdraws DGZ tokens to beneficiary .
Subtract fee percentage from the amount give
Returns an array of fund addresses and associated arrays of share prices and creation times
Returns all the relevant information about a specific GameItem .
Declare Crowdsale refund finish
Accept payment and transfer to owner account .
Get the title of the Module
Function to check if user have permission ( owner / bought ) for pack
Initializes the contract and allocates all initial tokens to the owner
Internal function to provide the address of the implementation contract
Submit the arbitrator 's answer to a question .
sets the maximum percentage that an individual token holder can hold
forbid specified address from sending & receiving tokens
enables or disables address to be receipient of EUR-T
Remove the fee for burning CarbonDollar into a particular kind of stablecoin .
Let the admin cash-out the entire contract balance 10 days after game has finished .
Returns a board 's row details , specifies which color occupies which cell in that row .
If the motion was to terminate at this instant , it would pass .
should be called off chain with as much gas as needed
Check whether the given spender is an approved operator or the owner of a given token ID
Get the block the auction ends on
Enable or disable a restriction for a given attribute type ID ` ID ` that prevents attributes of the given type from being set by operators based on the provided value for ` onlyPersonal ` .
Create ` mintedAmount ` tokens and send it to ` target `
If crowdsale is running
This function is copy-paste of the generateTokens of the original MiniMi contract except it uses mayGenerate modifier ( original uses onlyController ) this is because we do n't want the Sale campaign contract to be the controller
Mint and Distribute Green
Sell ` _amount ` tokens to contract
Allows the current owner to transfer control of the contract to a newOwner .
Transfer a Cutie owned by another address , for which the calling address has been granted transfer approval by the owner .
Sign in contract
Allow users to buy tokens for ` newTokenRate ` eth
An abbreviated name for NFTs in this contract
Re enables the ERC20 interface .
Increase cap .
Returns reward for painting pixels in wei .
Change the address of the treasury , the address to which the payments are forwarded to .
1 .
Count the number of organizations defined by the validator .
Cancel an open order in the orderbook .
Adjust the price of Ether according to Coin Market Cap 's API
executes transition state function
Add Certification to a student
returns the liquidity for given account .
This function will not throw in case the interval update is exceeded , in this way the latest update made to the ETH/USD rate is kept
Helper function actually performing the burning of tokens .
Enumerate NFTs assigned to an owner
Funds sent to the contract are added to the pot
Checks that a certain cutie is not in the middle of a breeding cooldown and is able to breed .
Function to allow contractors to withdraw ethers
Get a country by its id
Retrieve ERC Tokens sent to contract
Participate in the game .
Exchange sUSD for SNX while insisting on a particular rate .
Convert Wei to WBC tokens
Determines whether an aidrop is due to be distributed or not
Get the indexes of all PixelCons created by ` ( _creator ) `
Withdraw ether and delete the htlc swap .
Add an exchangeHandler address to the whitelist
returns current voting result for given address in percent .
Notifies the controller about an approval allowing the controller to react if desired
Hash ( keccak256 ) of the payload used by transferPreSigned
Internal function for paying dividends
Cancels the project and sets the state of the pool to CANCELLED .
Checks if a contract is behind an address .
ability for owner to withdraw the commission
Move to curve , used as a failsafe
Check whether contract is initialised
This function is disabled during the funding .
Total amount of fees at a specific ` _blockNumber ` .
Clear current approval of a given token ID
Function to claim ANY token stuck on contract accidentally In case of claim of stuck tokens please contact contract owners
Throws if ` _tokenId ` is not a valid NFT .
Migrate tokens to the new token contract .
if it is a contract , we use this function to lookup for the owner
Returns whether there is code in the target address
Increases the token supply , with the newly created tokens being added to the balance of the specified account .
Sets a new min of tokens to rebuy when paying a loan
Delete value for Bytes associated with bytes32 id key
Used to get all delegates
Buy unclaimed plots .
Internal function , helps in making the bid and transferring asset if successful
Considering the max possible ETH_EUR_FRACTION value ( 1018104 == ~273 ) , the max amount of ETH ( not wei ) that is safe to be passed as the argument is ~10 ( 54 - 18 ) ( ~2123 ) .
This method should be called by the WCT holders to collect their corresponding WPRs
Return allowed transaction amount from ` _from ` to ` _recipient `
Only contract owner
Check if the validator is approved to issue an attribute of the type with ID ` attributeTypeID ` to account ` account ` on the jurisdiction .
Adds or removes addresses from the whitelist .
Allow a user to withdraw any SNX in their schedule that have vested .
Confirms a transaction for any owner with signed message .
Changes the expiry time for the token ticker
To set the address of the crowdsale in order to distribute the tokens
Finalize crowdfunding
freeze ` _value ` token of '_addr ' address
Creates a new clone token with the initial distribution being this token at ` _snapshotBlock `
Issuer can reclaim remaining unclaimed dividend amounts , for expired dividends
Initializes a kernel instance along with its ACL and sets ` _permissionsCreator ` as the entity that can create other permissions
Get all PixelCon indexes being sold by ` ( _seller ) `
Sends the ETH to ETH fund wallet and finalizes the token sale
Add a single address to white list to allow purchase for more than 10 ETH .
Requestng withdrawal of ` _totalAmount ` to ` _destination.address ( ) `
The user/developper needs to add the tokenID , in the end of URL , to use the URI and get all details .
` onlyDonor ` Approves the proposed milestone list
This function can accept for blocking no more than `` totalProjectToken '' .
Takes item off champ
Return the address balance
Used to get the reputation of a Module Factory
Contract desctruction function
Cancel an offer without requiring the coordinator
Batch Function to Create Assets
This method will can be called by the controller before the contribution period end or by anybody after the ` endBlock ` .
Adds an address to the set of allowed spenders .
Open a new channel between ` msg.sender ` and ` receiver ` , and do an initial deposit to the channel .
Function to stop sale for an emergency .
Check if specified holder trusts an address with recovery procedure .
Check if the channel is in settling state : waits till the settling period is over .
allows the owner of this contract to destroy the contract
Returns the number of tokens for ETH
send ` _value ` tokens to ` _to ` address from ` msg.sender `
user can convert CarbonUSD umbrella token into a whitelisted stablecoin .
Handle the receipt of an NFT
choose if an address is allowed to bypass the global freeze
Determines the number of tokens to awarded to the winning party in a challenge
Get Poll info
Check if a certain campaign is still valid Returns a boolean representing the validity of the campaign Has value of True if the campaign is still valid else has value of False
Mints new tokens and assigns them to the target _investor .
Destroys a loan , the borrower could call this method if they performed an accidental or regretted `` approve '' of the loan , this method only works for them if the loan is in `` pending '' status .
pre-ICO bonus
challenge the provided proposal ID , and put tokens at stake to do so .
1.5 will be toward zero
Redeems by allocating an ownership percentage only of requestedAssets to the participant
Safety function so any accidentally sent ERC20 compliant tokens can be recovered .
Let the admin cash-out the entire contract balance 10 days after game has finished .
Validate transfer with TransferManager module if it exists
Returns the number of possible choices , which can be voted for .
Overrides to extend the way in which ether is converted to tokens .
finalize the upgrade
Get all tokens of a particular address
Gets balance of a payee .
Returns some basic information about a specific game
Notifies the controller about a transfer , for this TokenSale all transfers are allowed by default and no extra notifications are needed
Send ` _value ` tokens to ` _to ` from your account
Set the transfer fee , anywhere within the range 0-10 % .
Calculates the Net asset value of this fund
its ownership .
Vote for a poll
Owner can withdraw Parsecs only after contract is finished
Internal function for paying dividends
A getter to find the oldest pledge that has n't been canceled
Change name .
Return the final answer to the specified question , or revert if there is n't one
sets the controller
Called on ETH price update by Oraclize
This function set the adminship level on the contract to _newAdmin
Adds a new airdrop to the smart contract and starts the count down until it is distributed
Get all approved proposals
maximum investments to be accepted during the sale ( in euro-cents )
Withdraw a bid that was overbid and platform owner share
Authorize a third party ` _operator ` to manage ( send ) ` msg.sender ` 's tokens .
` onlyOwner ` Adds a spender to the ` allowedSpenders [ ] ` white list
Add chunk 1 / 7 to the whitelist
Tells whether an operator is approved by a given owner
owner : send ` _value ` of tokens to his address , can be called if crowdsale failed and some of the investors refunded the ether
sets the global registration fee
Notifies the controller about a burn attempt .
Upgrade finance contract used by this contract This function is part of the upgrade mechanism avaliable to the advertisement contracts .
Here for bug related migration
rainysiu
Function used by the client to check the proposal before submitting
Modifies 20 bytes in a bytes .
Get back the ether sent during the funding in case the funding has not reached the minimum level .
getter for extended information of user
Function used by the client to order according to the contractor proposal
allows LockedAccount to reclaim tokens wrongly sent to its address
Register an approvation made by a borrower in the past
withdraw tokens if ico failed
Updates account status .
ICO handler
Transfer the specified amount to the target address with embedded bytes data ~ ERC-223 Proposed Standard
Sell ` amount ` tokens to contract
Increase the number of coins
function to check status
ERC20 backwards compatible approve .
Returns balance to owner
Champ is no more for sale
Send ` _value ` from ` msg.sender ` to ` _to `
It is called everytime when a player interacts with this contract
update state change agent
Internal - Changes the protocol version and the SecurityToken contract
Withdraw an amount of ether
this function lets the worker claim the approved payment
Count all NFTs assigned to an owner
The owner of the contract can update the RenExBalances address .
Updates the Generation Season Controller .
This function is overrided by the test Mocks .
Function to clone tokens from a manager
Internal function to determine if an address is a contract
Allow pre-approved user to take ownership of a dividend card .
Remove a debt position from the register
This function returns the signature of configure function
Remove a member from this contract
function for compute resource factory at time
Add an attribute of the type with ID ` attributeTypeID ` , an attribute value of ` value ` , and an associated validator fee of ` validatorFee ` to account ` account ` by passing in a signed attribute approval with signature ` signature ` .
give ownership of a CDP back to the sender
Allows to Send Coins to other accounts
closure handler
Requesting a certification document by index is a paying feature .
Audits the secret of an atomic swap .
Finalize the contract so it will be forever impossible to change the approved contracts list
This method will generally be called by the AIX token contract to acquire AIXs .
Create tokens when funding is active .
Mint ` @ tokenAmount ( self.token ( ) : address , _amount , false ) ` tokens for the Token Manager
Gets the selected notary for the given seller .
A description of what this DAR is used for
Transfer the ownership to another account
Return the total no .
This function is disabled during the funding .
Underlying transfer function ; it is called by public functions later .
Owner must release all sale smart contracts
allows the creator to set the qty each user address needs to lock in order to trade a given MarketContract
Returns all the relevant information about a specific region .
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` .
Performs distribution of sent BMC tokens and send them to Profiterole address Only by oracle address and after reaching hardcap conditions
Finalize the TS and transfer funds
Gets the amount that Totle needs to give for this order
Allows the owner to revoke the vesting .
Anonymous payable function , this makes it easier for people to buy their tokens
Set new oracle , who can set asset prices
Delete a poll
Return the amount of tokens for a given Estate
Create ` mintedAmount ` tokens and send it to ` owner ` , can be run only by owner
Update the DApp by creating a new token with new functionalities the msg.sender becomes the controller of this clone token
The owner will call this method to extract the tokens
Change whether an address is authorized to use a specific contract or not
Renouncing to ownership will leave the contract without an owner .
Returns the array of swimmers addresses .
should migrate state that belongs to msg.sender
Allow users to buy tokens for ` newBuyPrice ` eth and sell tokens for ` newSellPrice ` eth
returns the darknode address which confirms the given orderID .
Set address of migration target contract and enable migration process .
Spice up the prize pool .
Return POLY raised by the STO
Request a mortgage with a loan id
Set the global approval status ( true/false ) for a given account
Calculates commission that has been charged for selling the canvas .
Remove a role from an address .
Add an address into the list of official operators .
Transfers the given amount of tokens back to the msg.sender
Create ` mintedAmount ` tokens and send it to ` target `
Returns the total number of Players currently in existence .
Allows the contract owner to update the minimum epoch interval .
Inititate/extend multisig unlockTime and/or initiate/refund multisig deposit
Executes a transaction from this contract
Execute desired action as a token holder
The fallback function : If the contract 's controller has not been set to 0 , then the ` proxyPayment ` method is called which relays the ether and creates tokens as described in the token controller contract
Triggered by invalid function calls and incoming transactions
Transfer the value of an escrow , minus the fees , minus the gas costs incurred by relay
claim asset pack that is previously approved by creator
Creates a dividend and checkpoint for the dividend
Lists an indexed Bytes collection from start or end
Used by a staker to claim currently staked coins
Request to cancel .
ability for controller to step down
Extract balance in ETH + SNT from the contract
entry point for updating prices
payable fallback to block EOA sending eth
Owner should release InvestmentDiscount smart contract before call this
Check if the funding goal was reached .
Alias a new address to an old address .
Transfers ` tokens ` from msg.sender to ` to `
Initialization Issue new ATx tokens for Softcap .
returns an array of investors at a given checkpoint NB - this length may differ from investorCount as it contains all investors that ever held tokens
Init function for ATxAsset .
Registers a new notary or replaces an already existing one .
Transfer a deed owned by another address , for which the calling address has previously been granted transfer approval by the owner .
Gets total supply of token
Returns the instructions associated with the module
Enables the admins to withdraw Ethers present in this contract .
Get the ID of the attribute type at index ` index ` .
Remove a token ID from the list of a given address
Transfers '_value ' in wei to the '_to ' address
Add an address to an existing id on behalf of a user to pay the gas costs
Function to set allocations for accounts .
Version of balanceOf ( ) which includes only currently spendable tokens .
This method can be used by the controller to extract mistakenly sent tokens to this contract .
It 's only possible to unlock the transfers
Returns all the relevant information about a specific token
Whitelist function
Sets the SHP token smart contract
Makes a purchase of a product .
Notifies the controller about an approval , for this TokenSale all approvals are allowed by default and no extra notifications are needed
post hook for buyTokens function
Destroy tokens from other account
Collateral that is not locked and available for issuance .
Returns all the relevant information about a specific tokenId .
Send tokens held in this contract to the Vault
Transfers the ownership of the ticker
If a user is blacklisted , they will have the permission to execute this dummy function .
The remaining nomins an issuer can issue against their total havven quantity .
Get the total amount of token supply
New Functionality
used to remove a moderator
registers multiple devices on the Atonomi network
Update the amount of tokens raised & emit cap overflow events .
Only callable by the whitelister .
Destroy the vesting information associated with an account .
Withdraw tokens from the contract .
Changes the controller of the contract
Override BaseCrowdsale.calculateToFund function .
Check whether contract is initialised
Returns address of oracle currency ( 0x0 for ETH )
Set the minimum amount of Ether to be deducted during a buy .
` mConfirmPayment ` allows for multiple pledges to be confirmed efficiently
Mints the tokens only once against the supplied key ( category ) .
Update poll description ( title or ballots ) as long as it has n't started
Returns true if and only if source string contains the specified query substring .
Count all the rare items assigned to an owner
Deny the validator at address ` validator ` the ability to continue to issue attributes of the type with ID ` attributeTypeID ` .
transfer all ETH balance from this contract to the sender and destroy the contract .
Disagree with proposed upgrade , and stick with current asset implementation until further explicit agreement to upgrade .
Sets the cap for the amount of token holders there can be
Send ` _value ` tokens to ` _to ` from your account
sends tokens using signature to recover token sender
Get list of users with coins stored in the contract This function can only be called by the Advertisement contract
One-way toggle to allow trading ( remove global freeze )
Perform exchange-specific checks on the given order
Adds or removes addresses from the whitelist .
Rents multiple plots out to another address .
Make transfer of tokens available to everyone
end time of the pre-ICO
Check the symbol is reserved or not
` onlyOwner ` changes the location that ether is sent
Check ` _value ` tokens allowed to ` _spender ` by ` _owner `
This is public rather than external so we can call super.unpause without using an expensive CALL .
collect ether to owner account
Get a Campaign information Based on a camapaign Id ( bidId ) , returns all stored information for that campaign .
Set a fee for asking a question with us as the arbitrator
This is a state-modifying function that can be called while the contract is paused .
Send ` _amount ` tokens to ` _to ` from ` _from ` on the condition it is approved by ` _from `
withdraw accumulated balance , called by payee in case crowdsale has failed
This function disables token transfers for everyone .
Low level token purchase function , w/o ether transfer from investor
Stop presales with setting state variable
Resumes the contribution
Alter the Total Supply .
Withdraw all contract funds to ` ( _to ) `
Send ` _value ` tokens to ` _to ` from ` msg.sender `
Decreases the approval of the spender .
Check if ` _name ` is a reasonable choice of name .
Transfer locked tokens to Lunyr 's multisig wallet
( The only exception to this is that the author of the module is the owner of the ST - Only if enabled by the FeatureRegistry )
transfer wei to receiver
Execute the first TX in the pendingTxs queue .
Get the Instructions that helped to used the module
Rollback transfer .
send ` _value ` token to ` _to ` from ` _from ` on the condition it is approved by ` _from `
Set ` _tokenAddress ` as the token address to be used in the auction .
Reset the hunt if the grace period is over
Enables token holders to transfer their tokens freely if true after the crowdsale is finished it will be true for security reasons can be switched to false
Unlocks the token .
This is how value enters into the system which creates pledges ; the token of value goes into the vault and the amount in the pledge relevant to this Giver without delegates is increased , and a normal transfer is done to the idReceiver
Mint a new NFT token
get content by sha3 ID hash
Overrided getTokenAmount function of parent Crowdsale contract to calculate the token with time and amount bonus .
update instance of MintableToken
Gets decimals of token
Unapprove a contract address for minting tokens and transferring tokens
Issues additional asset tokens if the asset have dynamic supply .
Get a validator 's signing key .
Deposit amount to channel .
Used to delete a delegate
orderStatus should return the status of the order , which should be : 0 - Order not seen before 1 - Order details submitted > 1 - Order settled , or settlement no longer possible
Determine the Spork token balance for an account
Unarchives a module attached to the SecurityToken
Return the permissions flag that are associated with CountTransferManager
Transfers vested tokens to Early Investors .
Distribute available tokens to a subset of users .
finalize the upgrade
Get the setup cost of the module
Get campaign signing web service endpoint Get the end point to which the user should submit the proof of attention to be signed
Used to burn tokens and decrease total supply
Function to initialize the AragonApp
Set the product creation fee
Does NO checks .
` owner ` can step down and assign some other address to this role
Separating the CFO and the CEO responsibilities requires the ability to set the CFO account
Low level function Used to create new tokens and increase total supply
Changes the address assigned to call ` escapeHatch ( ) `
Update access manager address
Expected packed structure is [ ADDR ( 20 ) | VALUE ( 12 ) ] .
The Dev ( Owner ) will call this method to extract the tokens
Remove ` _value ` tokens from the system irreversibly
Clear issuance data for an address
Transfer smartContract ownership
Claim auction tokens for ` receiverAddress ` after the auction has ended .
Give the ownership to the address _newOwner .
Issue an attribute of the type with ID ` attributeTypeID ` and a value of ` value ` to ` account ` if ` message.caller.address ( ) ` is approved validator .
This method can be used by the owner to extract mistakenly sent tokens to this contract .
Claim fees for last period when available or not already withdrawn .
Method called by the vault to cancel a payment .
Get the creator of PixelCon ` ( _tokenId ) `
Request the cosign of a loan Buys the parcel and locks its ownership until the loan status is resolved .
Unpause ( overridden function )
Create ` _mintedAmount ` tokens and send it to ` _target `
Grant another address the right to transfer token via takeOwnership ( ) and transferFrom ( ) .
Withdraw your funds if the ICO softcap has not been reached .
Withdraw pending returns .
Notifies the controller about an approval , for this Campaign all approvals are allowed by default and no extra notifications are needed
Get the total supply of Green
Add an address to an existing id
Disables further use of any privileged functions like freezing tokens .
Overrides finalize function from RBACERC223TokenFinalization to prevent future minting after finalization
allows external user to do contribution
Can be called if user is authorised or joined
Remove tokens from the system irreversibly
Any funds sent to this contract will be converted to the linked contract 's tokens
ether could also be deposited without calling this function
Allows the `` burning '' of a bid , for cases in which a bid was corrupted and ca n't be decrypted .
Retrieve the value of the attribute of the type with ID ` attributeTypeID ` on the account at ` account ` , assuming it is valid .
Returns the total number of dogs currently in existence .
` onlyOwner ` Changes the maximum number of seconds ` securityGuard ` can delay a payment
closure handler
Send ` _value ` tokens to ` _to ` from ` _from ` on the condition it is approved by ` _from `
Reclaims ERC20Basic compatible tokens
Buy an unclaimed plot .
The fallback function payable
Deletes the amount of tokens refunded from that buyer balance
Transfers tokens held by timelock to beneficiary .
Ask a new question and return the ID
Function to make a proposal to change the Dao rules
The initializer function for the OrganizationsValidator , with owner and pauser roles initially assigned to contract creator , and with an associated jurisdiction at ` jurisdiction ` and an assignable attribute type with ID ` validAttributeTypeID ` .
Allows Token owners to Sell Tokens directly to this Contract
Terminate contract and refund to owner
Grant another address the right to transfer token via takeOwnership ( ) and transferFrom ( ) .
Returns all the relevant information about a specific tokenId .
Transfer an amount of ` value ` to a receiver at account ` to ` .
Function used by the client to pay with shares or tokens
This manages the crowdfunding state machine We make it a function and do not assign the result to a variable So there is no chance of the variable being stale
Transfers ` _value ` amount of tokens from address ` _from ` to address ` _to ` .
Notifies the controller about an approval allowing the controller to react if desired
Claim auction tokens for ` receiver_address ` after the auction has ended .
Send ` _value ` tokens to ` _to ` on behalf of ` _from `
Function to handle eth transfers
Count all NFTs assigned to an owner
Used to launch the Module with the help of factory
Only hammer can call it
The initializer function for the jurisdiction , with owner and pauser roles initially assigned to contract creator ( ` message.caller.address ( ) ` ) .
Called by a security token to notify the registry it is using a module
Returns the timestamp at which the question will be/was finalized
Transfer a deed to another address .
Type of the Module factory
Set address of upgrade target contract and enable upgrade process .
withdraw CZR
Change the address that is authorized to change whitelist
controls if sender can change controller to newController
a funding is required to create a new leaderboard
Burns ` _amount ` tokens from pre-defined `` burnable '' address .
Allows associated addresses recently removed via recovery to permanently disable their old Identity .
Trigger new versions of Melon
returns current controller
Mints new tokens and assigns them to the target _investor .
Gets total champs count
Count NFTs tracked by this contract
use token address ETH_TOKEN_ADDRESS for ether
Perform a sell order at the exchange
Sets the token converter used to convert the MANA into RCN when performing the payment
Determine if the interface ID ` interfaceID ` is supported ( ERC-165 )
Adds a notary to the Data Order .
` onlyRecipient ` Proposes new milestones or changes old milestones , this will require a user interface to be built up to support this functionality as asks for RLP encoded bytecode to be generated , until this interface is built you can use this script : https : //github.com/Giveth/milestonetracker/blob/master/js/milestonetracker_helper.js
Returns all the relevant information about a specific person .
This method is for lighthouse contract use only
Create tokens when funding is active .
check status
Notifies the controller about a token transfer allowing the controller to react if desired
Sender initiates settling of the contract .
Allow user to leave purchase group ; note that their contribution and any funds they have in their withdrawableBalance will transfered to them .
Adds a list of addresses to this pools whitelist .
send ` _value ` token to ` _to ` from ` msg.sender `
Validation of an executed purchase .
Finalize crowdfunding
Queries balance at a specified checkpoint
Increment ` _acct ` balance by ` _val `
Grant tokens to customers
Add an attribute of the type with ID ` attributeTypeID ` , an attribute value of ` value ` , and an associated validator fee of ` validatorFee ` to account of ` msg.sender ` by passing in a signed attribute approval with signature ` signature ` .
Performs the requested portfolio rebalance
Cancel game session waiting for server acceptance .
Converts unclaimed fees of the manager into fund shares
interface for founders to whitelist investors
Enables token holders to transfer their tokens freely if true
Return the dispute fee for the specified question .
Generates ` amount ` tokens that are assigned to ` owner `
Returns the contribution to be used as part of the transaction , and any refund value if expected .
emoves a co-owner of a contract
unlocks 'investor ' tokens by making them withdrawable from assetToken
Gets payer of a request .
Transfer locked tokens to Decent.bet 's multisig wallet
Check if an account is approved to receive token transfers at account ` receiver ` .
a private function to lists an indexed Bytes collection starting from some ` _current_item ` ( which could be included or excluded ) , in the forwards or backwards direction
return releaseable amount for beneficiary in case of variable type of release
Change the cusd address .
How many wei can the msg.sender contribute now .
Internal function for paying dividends
Inserts a new address within the given storage .
Set the associated havven escrow contract .
Get the token symbol for Token interfaces
Standard transferFrom but incorporating frozen tokens logic
wrapper around internal deliverable method
Generates ` _amount ` tokens to be assigned to ` _tokenHolder ` Sample mint function to showcase the use of the ` Minted ` event and the logic to notify the recipient .
Validation of an incoming purchase .
Lists an indexed Bytes collection from some ` _current_item ` , going forwards or backwards depending on ` _from_start `
Allow owner to set tokens price for Buy-Back Campaign .
closure handler
Remove fees associated with going from CarbonUSD to a particular stablecoin .
` freeze ?
Retrieves a list of darknodes which are registered for the current epoch .
Cancels an sale ( given the collectibleID is not 0 ) .
locks funds of investors for a period of time
set the contract address of the sale auction .
Restart sale in case of an emergency stop
Redeems by allocating an ownership percentage only of requestedAssets to the participant
Returns the granularity
Reveals vote with choice and secret salt used in generating commitHash to attribute committed tokens
Determines how ETH is stored/forwarded on purchases .
Accepts payment of eth in exchange for a variable amount of tokens , depending upon the conversion rate of the current sale round .
Used to look up allowance of a user
Gets total expectedAmount of a request .
Change `` CreateChampFee '' .
cutFor returns the affiliate cut for a sale
Add burning man
This function is overridden by the test Mocks .
check status
check status
pauses ICO
Returns the number of Warriors ( tokens ) owned by a specific address .
Processes the presale if the allowed contribution is more than zero
Query if an address is an authorized operator for another address
Send ` _amount ` tokens to ` _to ` from ` _from ` on the condition it is approved by ` _from `
retrieves price of an asset
Withdraws a quantity of SNX back to the synthetix contract .
Check if contract is assigned as a validator on the jurisdiction .
ability for owner to withdraw the commission
Get the approved address for a single NFT
Returns a list of modules that match the provided name
Set preferred currency for a user
Return the miner halving ( starting halving or last claimed )
Used to change the setup fee
An abbreviated name for NFTs in this contract
Function used to set the funding limits for partners
Allow users to buy tokens for ` newBuyPrice ` eth
Accepts a signed fx request to swap currency pairs at a given amount ;
Function to clone a proposal from the last contractor
Gets name of token
Get the title of the Module
Add a recipient to the list
Returns a list of all deed identifiers assigned to an address .
Test whether a buyout price is valid .
Approves a wallet address to spend on behalf of the sender .
Gets the owner of the contract
Regular end game session .
Transfer locked tokens to Lunyr 's multisig wallet
Hash ( keccak256 ) of the payload used by increaseApprovalPreSigned
Count NFTs tracked by this contract
Clear funds of a game .
Get all tokens of a given address
allows the creator to set minimum balance a user must have in order to create MarketContracts
Allows ` _spender ` to spend no more than ` _value ` tokens in your behalf
transfer token from admin to users
the block number at which the campaign fails or succeeds
Called by the owner to unpause , returns to normal state
Set a fee for burning CarbonDollar into a stablecoin .
` freeze ?
Returns the instructions associated with the module
If this function is called again it overwrites the current allowance with _amount .
Name of the collection of deeds ( non-fungible token ) , as defined in ERC721Metadata .
Set 's the rate of tokens per ether for each tier .
Returns all the tags related to the a module type which are valid for the given token
The owner can withdraw ethers after the presale has completed , only if the minimum funding level has been reached
` owner ` can step down and assign some other address to this role
A distinct URI ( RFC 3986 ) for a given token .
Function to claim any token stuck on contract
Get votes for poll/ballot
allow user to make an offer after initial phase ( re-sale ) any offer minResalePercentage is accepted automatically
Sets max gas price and penalty before sale
Perform a buy order at the exchange
Transfer ` _value ` tokens from ` _from ` to ` _to ` if ` msg.sender ` is allowed .
Passes asset ownership to specified address .
Get account of utilized jurisdiction and associated attribute registry managed by the jurisdiction .
Enumerate NFTs assigned to an owner
Redeem ETH to channel beneficiary and and set channel state as redeemed .
Transfers ` _value ` amount of tokens to address ` _to ` .
Calls transfer on the token and reverts if the call fails .
Finalizes the campaign Get funds out , generates team , reserve and reserve tokens
Let 's bring the new Kydy to it 's home !
Hash ( keccak256 ) of the payload used by closeTradeProfile
Update poll description ( title or ballots ) as long as it has n't started
Sign out contract
Retrieves information about account frozen tokens .
Approve the validator at address ` validator ` to issue attributes of the type with ID ` attributeTypeID ` .
Grant another address the right to transfer token via takeOwnership ( ) and transferFrom ( ) .
This is public rather than external so we can call super.unpause without using an expensive CALL .
Delete value for Address associated with bytes32 id key
Clear a following trade
Queries totalSupply as of a defined checkpoint
Freeze user during platform use - Backend Function
Withdraw lender funds in batch , it walks by all the loans passed to the function and withdraws all the funds stored on that loans .
Transfers ` _amount ` from ` _from ` to ` _to ` with additional data .
Add an administrator
this function lets the manager to approve payment
Total supply
Send _amount amount of tokens to from tx.origin to address _to
Performs ERC20 approvals in batches ; for each ` i ` , approves ` quantities [ i ] ` tokens to be spent by ` spenders [ i ] ` on behalf of the message sender .
Check if a given signed attribute approval is currently valid when submitted directly by ` msg.sender ` .
Function used by the client to send ethers
ability for owner to change the service commmission
Enumerate deeds assigned to an owner
Shared vote setup function between voteFor and voteAgainst .
This function is disabled during the funding .
Basic helper function to return the current time
Initializes CND token to contribution
Transfer tokens from an address to another ~ ERC-20 Standard
Transfers tokens held by timelock to beneficiary .
Calculates the interest of a given amount , interest rate and delta time .
Allows owner to set new time tolerance on Oraclize queries
Approve ` _value ` tokens for ` _spender `
Introspection interface as per ERC-165 ( https : //github.com/ethereum/EIPs/issues/165 ) .
Adds a new custom Security Token and saves it to the registry .
Get the total metadollars supply
Donate tokens from the sender 's balance into the fee pool .
Set the current ETH rate in wei for one DOL
If value would be more then required ( see getPrice ) change will be returned to msg.sender ( not to _registrant !
Donate tokens from the sender 's balance into the fee pool .
This is public rather than external so we can call super.unpause without using an expensive CALL .
Freeze ` frozenAmount ` tokens from being sold
see MTokenMint
Re-enable token circulation
Authorize a third party ` _operator ` to manage ( send ) ` msg.sender ` 's tokens .
Transfer a token value from one trader to another , transferring a fee to the RewardVault .
Get the ID of the attribute type that the validator can issue .
used to launch the Module with the help of factory
Only the owner can define which addresses are allowed to vote ( and also which address stands for which vote choice )
this function lets the manager or arbitrator cancel the job
Returns the address currently assigned ownership of a given Pixel .
An abbreviated name for NFTs in this contract
Ability to transferFrom where they sender pays the fees ( not ERC20 ) .
Setting operator ` _operator ` for ` _tokenHolder `
Setting lock time .
Perform a sell order at the exchange
Called by the owner to pause , triggers stopped state
put item into mapping
Gets the current supply interest rate based on the given asset , total cash and total borrows
Cancel active game without playing .
Deletes an existing entry
Helper function that checks for ERC777TokensSender on the sender and calls it .
Transfers the ownership of an NFT from one address to another address
Call oraclize_query with a delay in seconds
Returns the security token data by address
Pay method for merchant interface
Add a new vesting entry at a given time and quantity to an account 's schedule .
Returns a URI pointing to a metadata package for this token conforming to ERC-721 ( https : //github.com/ethereum/EIPs/issues/721 )
Gets the balance of the specified address
Buy keys for each team .
Gets the current length of the Map .
Function used by the main partner to set the start time of the funding
Buy the current owner out of the tile .
Issuer can reclaim remaining unclaimed dividend amounts , for expired dividends
Get the whitelist status for an address
Mints and transfers tokens to beneficiary .
these standardized APIs for approval :
SafeMath Library safeSub Import
` onlyOwner ` changes the location that ether is sent
used to launch the Module with the help of factory
Function used by the client to send ethers from the Dao manager
Get a license 's issueTime
Returns asset description .
Changes the address assigned to call ` escapeHatch ( ) `
Allows someone buy obtain an Pre sale token
Changes the house cut percentage
Re-enable token circulation - splitProfits internal
Used to burn tokens and decrease total supply
Calculates how much ETH somebody can receive for selling amount BOB
Registers an Asset information entry
Gets the balance of the specified address
Get all minted identifiers ;
Get name of this token .
Transfers the ownership of an NFT from one address to another address
Takes actions on contribution
Insert a node at the end of the list .
Add a unconfirmed score to leaderboard/player .
Resumes the presale
Get the price of a campaign Based on the Campaign id , return the value paid for each proof of attention registered .
Function to create a request as payee .
Returns the timestamp when the question can first be answered
Total supply , including in reserve
Start distribution phase
Owner can move tokens to any address
Set the Account Spending Period Limit as UNIX timestamp
` onlyOwner ` Proposes to transfer control of the contract to a new owner
Clear the KYC flags for an array of addresses to allow tokens transfers
Create ` mintedAmount ` tokens and send it to ` target `
Transfers tokens held by lock .
Returns address of oracle currency ( 0x0 for ETH )
Checks if a provided address ` _manager ` has designated access to asset ` _symbol ` .
Add chunk 3 / 7 to the whitelist
extended 777 approveAndCall and erc20 approve functionality that gives an allowance and calls the new operator .
marks contract as audited
Send ` _amount ` tokens to ` _to ` from ` msg.sender ` and call ` contractFallback ` on the recipient if it is a Contract .
Ensure ` origin ` address can deposit money into the channel identified by ` channelId ` .
returns non-sold tokens to owner
msg.sender must be _payer , The request must be in the state CREATED ( not CANCELED , not ACCEPTED ) .
Returns true if the canvas has been already finished .
get Permission structure
Add account ` validator ` as a validator with a description ` description ` who can be approved to set attributes of specific types .
Total amount of tokens at a specific ` _blockNumber ` .
Returns all the relevant information about a specific person .
finishes ICO
Submit the answer whose hash you sent in a previous submitAnswerCommitment ( ) transaction
This allows the owner to stop a malicious party from spamming the orderbook
Send ` _value ` tokens to ` _to ` from ` msg.sender ` and trigger tokenFallback if sender is a contract .
Removes a list of addresses from the admins list .
Calculates the ID of the order .
Use to get all the tags releated to the functionality of the Module Factory .
` msg.sender ` approves ` _spender ` to send ` _amount ` tokens on its behalf , and then a function is triggered in the contract that is being approved , ` _spender ` .
MultiTransfer function for airdrop
Get the free claim allowance of an address .
Show the ` tokenOwner ` balances for this contract
Update a treasury address
Function to allow the Token users to transfer among themselves .
transfer ` allocations [ msg.sender ] ` tokens to ` msg.sender ` from this contract
Terminate contract and refund to owner
Set the active times .
Gets status of authority registration
Creates new version tokens from the new token contract
only ` allowedSpenders [ ] ` Creates a new ` Payment `
Check that Security Token is registered
tokens could also be deposited without calling this function
Changes the PolyToken address .
Burn _burnedAmount tokens form _target address .
Returns all the relevant information about a specific place .
Transfer tokens from one address to another
Return the dispute fee for the specified question .
Removes a trusted currencyContract .
increaseApproval should be used instead of approve when the user 's allowance is greater than 0 .
Check if a transfer of the NFT with ID ` tokenId ` on behalf of account ` from ` to a recipient at account ` to ` with ` msg.value ` of ` value ` is approved .
Returns the array of token addresses .
Claim some of tokens stored on the contract
Finalize crowdfunding
Returns the block number for when the channel was opened .
Transfer a element owned by another address , for which the calling address has previously been granted transfer approval by the owner .
Notifies the controller about an approval allowing the controller to react if desired
allows the owner to change the default reputation for manufacturers
In the event of errors , allow the owner to move tokens from an account
This is public rather than external so we can call super.unpause without using an expensive CALL .
Called when ` _owner ` sends ether to the MiniMe Token contract
Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT ` _to ` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST
` onlyOwner ` Adds a spender to the ` allowedSpenders [ ] ` white list
Approve a given address to take ownership of a deed .
Process a reimbursement claim for a specified address .
Perform a sell order at the exchange
processes the contribution checks campaign state , time window and minimal contribution throws if one of the conditions fails
Signals that token holder approved spending of tokens and some action should be taken .
Called by the development team once the World Cup has ended ( adminPool is set )
This is public rather than external so it can be called by derived contracts .
This is a private function which should be called from user-implemented external burn function .
Internal function for paying dividends
Create ` mintedOshiAmount ` and send it to ` target `
Performs the trade at the exchange
Returns all the relevant information about a specific girl .
Under special circumstances the Transfer Agent needs to move tokens around .
Get security token address by ticker name
return releaseable amount for beneficiary in case of straight type of release
returns amount of euro corresponding to burned neumarks
Sets the player override identifier .
claims available tokens .
Permits to create an approval on a contract and then call a method on the approved contract right away .
The owner can withdraw unspent Parsec credits if the minimum funding level has been reached and pre-sale is over
invite
Get the name of the Module
Sets Proxy contract address for a particular asset .
Accept the nomination to be owner .
Exchange ETH to HAV while insisting on a particular set of rates .
supposed to be called by ICO Contract IF ` fundingGoal ` was n't reached during PreICO to notify it
addInvestorBonusInTokens is used for sending bonuses for big investors in tokens
freezes transfers
Set the token symbol for Token interfaces
get sha256 hash of name for content ID
Notifies the controller about an approval allowing the controller to react if desired
Get the start date of a campaign Based on the Campaign id , return the value ( in miliseconds ) corresponding to the start Date of the campaign .
Set the whitelist status for an address
Registers the Ethereum address to the given endpoint .
Send ` _value ` tokens to ` _to ` from your account
Set the beneficiary address of this contract .
Calculate the Fee charged on top of a value being sent
Returns the unique identifier for the channel given by the contract .
Gets price of Order
Initializes an ACL instance and sets ` _permissionsCreator ` as the entity that can create other permissions
Commits vote using hash of choice and secret salt to conceal vote until reveal
Fund a mission
Used to launch start the contract
_sellCrowd checks CST purchases during crowdsale
withdraws from a token holding assets
this function is called for every transfer We unlock PURCHASED and BONUS tokens in 5 stages : after 28.09.2018 20 % are unlocked after 30.11.2018 40 % are unlocked after 31.01.2019 60 % are unlocked after 29.03.2019 80 % are unlocked after 31.05.2019 100 % are unlocked
Remove and shut down version of Melon
Withdraw fees earned by a Darknode .
Update configuration settings
Function to add assetManager
Transfer ` tokens ` from the ` from ` account to the ` to ` account
Ability to transferFrom where they sender pays the fees ( not ERC20 ) .
calculates the ammount of ether to send with updatePrice
Disables further use of privileged functions : setSale , thaw
Getter function for highestBid ` bids [ highestBidder ] `
Function to sell tokens
Remove ` _value ` tokens from the system irreversibly
Return the foreign currency USD exchanged amount in basis points
This function transfer the adminship of the contract to _newAdmin
Get pending address
This is mainly an helper function but can be useful in case the ` addWhitelistAddrs ` loop has issues
Used to change the flag true - It refers there are no transfer restrictions , for any addresses false - It refers transfers are restricted for all addresses .
set the token , if no hodler provided then creates a hodler reward contract
allows the owner to withdraw unspent POLY stored by them on the ST .
Function to claim any token stuck on contract
Returns if a darknode was in the registered state last epoch .
` onlyRecipient ` Reassigns the ` recipient ` to a new address
withdraw ` amount ` of ` asset ` from sender 's account to sender 's address